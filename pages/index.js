import Head from 'next/head'
import Image from 'next/image'
import { Poppins } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { useState } from 'react'
import axios from 'axios'
import styled from 'styled-components'

const poppins = Poppins({ subsets: ['latin'], weight: ['400'] })


const Main = styled.main`
background-image: url('/colorfulblob.jpg');
  background-size: cover;
`

const Title = styled.div`
font-weight: 800;
font-family: 'Sofia Sans', sans-serif;
font-size: 50px;
color: #FFFFFF;
padding: 15px;
border-radius: 5px;
`
const Input = styled.input`
font-family: 'Sofia Sans', sans-serif;
font-size: 20px;
border-bottom: 3px solid black;
border-top: none;
border-right: none;
border-left: none;
padding: 10px;
border-radius: 4px;
background: rgba(255, 255, 255, .7);
`

const WeatherCont = styled.main`
background: rgba(255, 255, 255, .7);
padding: 20px;
border-radius: 10px;
font-family: 'Sofia Sans', sans-serif;
width: 200px;
`

const TitleCont = styled.div`
font-size: 25px;
font-weight: 800;
color: #FF5733 ;
`

const DescCont = styled.div`
margin-bottom: 20px;
`
const TempCont = styled.div`
font-size: 20px;
`
const FLCont = styled.div`
font-size: 12px;
font-style: italic;
margin-bottom: 20px;
`
const WindCont = styled.div`

`

const WindTitle = styled.div`
font-weight: 700;
font-size: 20px;
`


export default function Home() {

  const [location, setLocation] = useState('');
  const [data, setData] = useState({});
  const [weather, setWeather] = useState();
  const [errorMessage, setErrorMessage] = useState('');
  const [temp, setTemp] = useState('');

  var apiKey = '1879aa3a57f70c1ab7cd26202b9ee4d0'
  var lang = "en";
  var units = "metric";
  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=${units}&appid=${apiKey}&lang=${lang}`

  const searchLocation = (event) => {
    if(event.key === "Enter") {
      axios.get(url)  
      .then((response) => {
        console.clear();
        setData(response.data)
        console.log(response.data);
        setWeather(response.data.weather)
        setTemp(response.data.temp)
        setErrorMessage("")
        console.log(weather)
      }).catch(err => {
        console.log(err);
        setErrorMessage("Please enter another location");
        setData({});
        setWeather()
        setTemp()
      })
      setLocation('')
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main className={styles.main}>
        <Title>{data.name}</Title>
        <Input
        value={location}
        onChange={event => setLocation(event.target.value)}
        placeholder="Enter Location"
        onKeyDown={searchLocation}
        type="text"
        />
        {
          weather && weather.map((w, index) =>{
            return(
              <WeatherCont>
                <div key={index}>                
                <TitleCont>{w.main}</TitleCont>
                <DescCont>{w.description}</DescCont>
                <TempCont>{data.main.temp} °C</TempCont>
                <FLCont>Feels like {data.main.feels_like} °C</FLCont>
                <WindTitle>Wind</WindTitle>
                <WindCont>{data.wind.speed} m/s</WindCont>
              </div>
              </WeatherCont>
 
            )
          })
        }
      </Main>
    </>
  )
}
